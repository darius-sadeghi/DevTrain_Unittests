@page "/CreateToDo"
@rendermode InteractiveServer

@using ToDoApp.Shared.DTOs
@using ToDoApp.Shared.Interfaces
@inject IToDoExchange toDoProxy
@inject NavigationManager navigationManager

<h3>CreateToDo</h3>

<EditForm Model="@CurrentToDo" OnValidSubmit="@save"
          FormName="formToDo">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="titel">Titel</label>
        <InputText id="titel" @bind-Value="CurrentToDo.Title" />
    </div>

    <div class="form-group">
        <label for="titel">Datum</label>
        <InputDate id="dueDate" @bind-Value="CurrentToDo.DueDate" />
    </div>

    <div class="form-group">
        <label for="titel">Beschreibung</label>
        <InputTextArea id="description" @bind-Value="CurrentToDo.Description" />
    </div>

    <button type="submit">anlegen</button>
</EditForm>

@code {
    [SupplyParameterFromForm]
    public ToDoDTO CurrentToDo { get; set; } = new ToDoDTO();



    private async Task save()
    {
        await toDoProxy.Add(CurrentToDo);
        navigationManager.NavigateTo("todos");
    }
}
